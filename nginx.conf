# nginx.conf  --  docker-openresty
#
# This file is installed to:
#   `/usr/local/openresty/nginx/conf/nginx.conf`
# and is the file loaded by nginx at startup,
# unless the user specifies otherwise.
#
# It tracks the upstream OpenResty's `nginx.conf`, but removes the `server`
# section and adds this directive:
#     `include /etc/nginx/conf.d/*.conf;`
#
# The `docker-openresty` file `nginx.vh.default.conf` is copied to
# `/etc/nginx/conf.d/default.conf`.  It contains the `server section
# of the upstream `nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#

#user  nobody;
worker_processes 2;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;



error_log  logs/error.log debug;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    default_type  application/octet-stream;

    resolver 8.8.8.8 ipv6=off;

    lua_shared_dict doorbell 5m;
    lua_shared_dict doorbell_rules 32m;
    lua_package_path "/home/michaelm/git/doorbell/lib/?.lua;/home/michaelm/git/lua-resty-pushover/lib/?.lua;;";

    # Enables or disables the use of underscores in client request header fields.
    # When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the ignore_invalid_headers directive.
    # underscores_in_headers off;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    # Log in JSON Format
    # log_format nginxlog_json escape=json '{ "timestamp": "$time_iso8601", '
    # '"remote_addr": "$remote_addr", '
    #  '"body_bytes_sent": $body_bytes_sent, '
    #  '"request_time": $request_time, '
    #  '"response_status": $status, '
    #  '"request": "$request", '
    #  '"request_method": "$request_method", '
    #  '"host": "$host",'
    #  '"upstream_addr": "$upstream_addr",'
    #  '"http_x_forwarded_for": "$http_x_forwarded_for",'
    #  '"http_referrer": "$http_referer", '
    #  '"http_user_agent": "$http_user_agent", '
    #  '"http_version": "$server_protocol", '
    #  '"nginx_access": true }';
    # access_log /dev/stdout nginxlog_json;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # Don't reveal OpenResty version to clients.
    server_tokens off;


    # nginx.vh.default.conf  --  docker-openresty
    #
    # This file is installed to:
    #   `/etc/nginx/conf.d/default.conf`
    #
    # It tracks the `server` section of the upstream OpenResty's `nginx.conf`.
    #
    # This config (and any other configs in `etc/nginx/conf.d/`) is loaded by
    # default by the `include` directive in `/usr/local/openresty/nginx/conf/nginx.conf`.
    #
    # See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
    #


    init_by_lua_block {
        require("doorbell").init({
            shm = "doorbell",
            base_url = os.getenv("DOORBELL_BASE_URL"),
            save_path = os.getenv("DOORBELL_SAVE_PATH"),
            log_path  = os.getenv("DOORBELL_LOG_PATH"),
            trusted = {
                "127.0.0.0/8",
                "10.0.0.1/16",
            },
            allow = {
                { cidr = "127.0.0.0/8", terminate = true },
                { cidr = "10.0.0.1/16", terminate = true },
                { path = "~^/.well-known/acme-challenge/" },
            },
            deny = {
                { path = "~/wp-login.php$", terminate = true },
            },
            pushover = {
                token = os.getenv("PUSHOVER_TOKEN"),
                user_key = os.getenv("PUSHOVER_USER_KEY"),
            }
        })
    }

    init_worker_by_lua_block {
        require("doorbell").init_worker()
    }

    server {
        listen 9876;

        location = /ring {
            content_by_lua_block {
                require("doorbell").ring()
            }
        }


        location = /answer {
            content_by_lua_block {
                require("doorbell").answer()
            }
        }

        location = /rules {
            content_by_lua_block {
                require("doorbell").list()
            }
        }

        location = /reload {
            content_by_lua_block {
                require("doorbell").reload()
            }
        }

        location = /metrics {
            content_by_lua_block {
                require("doorbell").metrics()
            }
        }

        log_by_lua_block {
            require("doorbell").log()
        }
    }
}
