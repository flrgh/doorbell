"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("@commitlint/types");
const leading_blank_fn_1 = __importDefault(require("./leading-blank-fn"));
test('should not apply', () => {
    let rule = (0, leading_blank_fn_1.default)([types_1.RuleConfigSeverity.Disabled]);
    expect(rule('test')).toBe('test');
    expect(rule('\ntest')).toBe('\ntest');
    expect(rule('aaa\ntest')).toBe('aaa\ntest');
    expect(rule('')).toBe('');
    rule = (0, leading_blank_fn_1.default)();
    expect(rule('test')).toBe('test');
    expect(rule('\ntest')).toBe('\ntest');
    expect(rule('aaa\ntest')).toBe('aaa\ntest');
    expect(rule('')).toBe('');
});
test('should add leading blank', () => {
    const rule = (0, leading_blank_fn_1.default)([types_1.RuleConfigSeverity.Error, 'always']);
    expect(rule('test')).toBe('\ntest');
    expect(rule('\ntest')).toBe('\ntest');
    expect(rule('\n\ntest')).toBe('\n\ntest');
    expect(rule('aaa\ntest')).toBe('\naaa\ntest');
    expect(rule('\naaa\ntest')).toBe('\naaa\ntest');
    expect(rule('')).toBe('\n');
});
test('should remove leading blank', () => {
    const rule = (0, leading_blank_fn_1.default)([types_1.RuleConfigSeverity.Error, 'never']);
    expect(rule('test')).toBe('test');
    expect(rule('\ntest')).toBe('test');
    expect(rule('\n\ntest')).toBe('test');
    expect(rule('aaa\ntest')).toBe('aaa\ntest');
    expect(rule('\naaa\ntest')).toBe('aaa\ntest');
    expect(rule('\n\n\naaa\ntest')).toBe('aaa\ntest');
    expect(rule('')).toBe('');
});
//# sourceMappingURL=leading-blank-fn-test.js.map